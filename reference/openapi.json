{
    "swagger": "2.0",
    "info": {
        "description": "This is the Bytewax Platform API",
        "title": "WaxAPI",
        "termsOfService": "https://bytewax.io/terms-of-use",
        "contact": {
            "name": "Bytewax Platform Support",
            "url": "https://bytewax.io/contact-us",
            "email": "support@bytewax.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.8.1"
    },
    "paths": {
        "/dataflows": {
            "get": {
                "description": "get all dataflows",
                "produces": [
                    "application/json"
                ],
                "summary": "get all dataflows",
                "operationId": "get-all-dataflows",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/k8s.DataflowList"
                        }
                    }
                }
            },
            "post": {
                "description": "create dataflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create dataflow",
                "operationId": "create-dataflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Dataflow Data",
                        "name": "specs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.DataflowDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dataflows/{dataflow_name}": {
            "get": {
                "description": "get dataflow by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get dataflow by name",
                "operationId": "get-dataflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/k8s.DataflowResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "update dataflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update dataflow",
                "operationId": "update-dataflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dataflow Data",
                        "name": "specs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.DataflowDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete dataflow by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "delete dataflow by name",
                "operationId": "delete-dataflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dataflows/{dataflow_name}/jobs": {
            "get": {
                "description": "get scheduled dataflow jobs by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get scheduled dataflow jobs by name",
                "operationId": "get-dataflow-jobs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.JobList"
                        }
                    }
                }
            }
        },
        "/dataflows/{dataflow_name}/logs": {
            "get": {
                "description": "get dataflow logs by pod",
                "summary": "get dataflow logs by pod",
                "operationId": "get-dataflow-logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pod Name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dataflows/{dataflow_name}/logsv2": {
            "get": {
                "description": "get dataflow logs by pod",
                "summary": "get dataflow logs by pod",
                "operationId": "get-dataflow-logs-v2",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pod Name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Start time for fetching logs (RFC3339 format)",
                        "name": "since_time",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Fetch logs from this many seconds ago",
                        "name": "since_seconds",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Fetch logs from previous container instance if it exists",
                        "name": "previous",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of lines from the end of the logs to fetch",
                        "name": "tail_lines",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Maximum number of bytes to fetch",
                        "name": "limit_bytes",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dataflows/{dataflow_name}/pods": {
            "get": {
                "description": "get dataflow pods by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get dataflow pods by name",
                "operationId": "get-dataflow-pods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.PodList"
                        }
                    }
                }
            }
        },
        "/dataflows/{dataflow_name}/reset-state": {
            "put": {
                "description": "reset dataflow recovery state",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "reset dataflow recovery state",
                "operationId": "reset-dataflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Reset State Value",
                        "name": "spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.ResetStateDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dataflows/{dataflow_name}/suspend": {
            "put": {
                "description": "suspend dataflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "suspend dataflow",
                "operationId": "suspend-dataflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Suspend Value",
                        "name": "spec",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.SuspendDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/namespaces": {
            "get": {
                "description": "get all namespaces",
                "produces": [
                    "application/json"
                ],
                "summary": "get all namespaces",
                "operationId": "get-all-namespaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.NamespaceList"
                        }
                    }
                }
            }
        },
        "/secrets": {
            "get": {
                "description": "get all secrets",
                "produces": [
                    "application/json"
                ],
                "summary": "get all secrets",
                "operationId": "get-all-secrets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.SecretList"
                        }
                    }
                }
            },
            "post": {
                "description": "create secret",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create secret",
                "operationId": "create-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Secret Data",
                        "name": "specs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/k8s.Secret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/secrets/{secret_name}": {
            "get": {
                "description": "get secret by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get secret by name",
                "operationId": "get-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret Name",
                        "name": "secret_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include Values",
                        "name": "include_values",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/k8s.Secret"
                        }
                    }
                }
            },
            "put": {
                "description": "update secret",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update secret",
                "operationId": "update-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret Name",
                        "name": "secret_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Secret Data",
                        "name": "specs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/k8s.Secret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete secret by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "delete secret by name",
                "operationId": "delete-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret Name",
                        "name": "secret_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "k8s.DataflowList": {
            "type": "object",
            "properties": {
                "dataflows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/k8s.DataflowResponse"
                    }
                }
            }
        },
        "k8s.DataflowResponse": {
            "type": "object",
            "properties": {
                "creationTimestamp": {
                    "type": "string"
                },
                "fileContent": {
                    "type": "string"
                },
                "fileUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.DataflowSpec"
                },
                "ui": {
                    "$ref": "#/definitions/k8s.DataflowUI"
                }
            }
        },
        "k8s.DataflowUI": {
            "type": "object",
            "properties": {
                "details": {
                    "$ref": "#/definitions/gin.H"
                },
                "kind": {
                    "type": "string"
                },
                "lastSchedule": {
                    "type": "string"
                },
                "processesReady": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "k8s.Secret": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/k8s.SecretPair"
                    }
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "k8s.SecretPair": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.ArtifactsDownload": {
            "type": "object",
            "properties": {
                "secretName": {
                    "description": "Name of the Kubernetes secret storing Personal Access Token. It must contain the key TOKEN\n+kubebuilder:validation:Optional",
                    "type": "string"
                },
                "token": {
                    "description": "Personal Access Token\n+kubebuilder:validation:Optional",
                    "type": "string"
                },
                "url": {
                    "description": "Url of the tar file to download",
                    "type": "string"
                }
            }
        },
        "v1alpha1.CloudBackup": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "Enables Cloud Backup feature\n+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "s3": {
                    "description": "Cloud Backup S3 settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1alpha1.S3"
                        }
                    ]
                }
            }
        },
        "v1alpha1.DataflowSpec": {
            "type": "object",
            "properties": {
                "artifactsDownload": {
                    "description": "Downloads a tar file from a URL. It could be a public URL or a private GitHub repository\n+kubebuilder:validation:Optional",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1alpha1.ArtifactsDownload"
                        }
                    ]
                },
                "chartValues": {
                    "description": "Advanced Bytewax helm chart values. See more at https://bytewax.github.io/helm-charts",
                    "type": "string"
                },
                "concurrencyPolicy": {
                    "description": "Specifies how to treat concurrent executions of a Scheduled Dataflow. Valid values are: - \"Allow\": allows Dataflows to run concurrently; - \"Forbid\": (default) forbids concurrent runs, skipping next run if previous run hasn't finished yet; - \"Replace\": cancels currently running Dataflow and replaces it with a new one\n+kubebuilder:validation:Optional",
                    "type": "string"
                },
                "configMapName": {
                    "description": "Dataflow Configmap name",
                    "type": "string"
                },
                "dependencies": {
                    "description": "Python dependencies needed to run the dataflow (use pip syntax, e.g. package-name==0.1.0)",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "env": {
                    "description": "Environment variables to inject to dataflow container",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.EnvVar"
                    }
                },
                "image": {
                    "description": "Dataflow container image settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1alpha1.Image"
                        }
                    ]
                },
                "jobMode": {
                    "description": "Run a Job in Kubernetes instead of an Statefulset. Use this to batch processing\n+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "keepAlive": {
                    "description": "Keep the Dataflow container alive after dataflow ends. It could be useful for troubleshooting purposes\n+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "processesCount": {
                    "description": "Number of processes to run\n+kubebuilder:validation:Optional\n+kubebuilder:default=1",
                    "type": "integer"
                },
                "pythonFileName": {
                    "description": "Python script file to run",
                    "type": "string"
                },
                "recovery": {
                    "description": "Stores recovery files in Kubernetes persistent volumes to allow resuming after a restart (your dataflow must have recovery enabled: https://bytewax.io/docs/getting-started/recovery)",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1alpha1.Recovery"
                        }
                    ]
                },
                "schedule": {
                    "description": "Dataflow schedule in Cron format, see https://en.wikipedia.org/wiki/Cron\n+kubebuilder:validation:Optional",
                    "type": "string"
                },
                "suspend": {
                    "description": "Suspends the Dataflow execution. For Scheduled Dataflows, it will suspend subsequent executions, it does not apply to already started executions.\n+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "tarName": {
                    "description": "Tar file name stored in the dataflow configmap\n+kubebuilder:validation:Optional",
                    "type": "string"
                },
                "workersPerProcess": {
                    "description": "Number of workers to run in each process\n+kubebuilder:validation:Optional\n+kubebuilder:default=1",
                    "type": "integer"
                }
            }
        },
        "v1alpha1.EnvVar": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Environment variable name",
                    "type": "string"
                },
                "value": {
                    "description": "Environment variable value",
                    "type": "string"
                }
            }
        },
        "v1alpha1.Image": {
            "type": "object",
            "properties": {
                "pullPolicy": {
                    "description": "Container image pull policy (the value must be Always, IfNotPresent or Never)\n+kubebuilder:validation:Optional\n+kubebuilder:default=\"Always\"",
                    "type": "string"
                },
                "pullSecret": {
                    "description": "Kubernetes secret name to pull images\n+kubebuilder:validation:Optional\n+kubebuilder:default=\"default-credentials\"",
                    "type": "string"
                },
                "repository": {
                    "description": "Container image repository URI",
                    "type": "string"
                },
                "tag": {
                    "description": "Container image tag",
                    "type": "string"
                }
            }
        },
        "v1alpha1.Persistence": {
            "type": "object",
            "properties": {
                "size": {
                    "description": "Size of the persistent volume claim to be assign to each dataflow pod in Kubernetes\n+kubebuilder:validation:Optional\n+kubebuilder:default=\"10Gi\"",
                    "type": "string"
                },
                "storageClassName": {
                    "description": "Storage class of the persistent volume claim to be assign to each dataflow pod in Kubernetes",
                    "type": "string"
                }
            }
        },
        "v1alpha1.Recovery": {
            "type": "object",
            "properties": {
                "backupInterval": {
                    "description": "System time duration in seconds to keep extra state snapshots around\n+kubebuilder:validation:Optional\n+kubebuilder:default=1",
                    "type": "integer"
                },
                "cloudBackup": {
                    "description": "Back up worker state DBs to cloud storage",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1alpha1.CloudBackup"
                        }
                    ]
                },
                "enabled": {
                    "description": "Enable Dataflow recovery feature\n+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "partsCount": {
                    "description": "Number of recovery partitions\n+kubebuilder:validation:Optional\n+kubebuilder:default=1",
                    "type": "integer"
                },
                "persistence": {
                    "description": "Kubernetes Persistence settings",
                    "allOf": [
                        {
                            "$ref": "#/definitions/v1alpha1.Persistence"
                        }
                    ]
                },
                "singleVolume": {
                    "description": "Use only one persistent volume for all dataflow's pods in Kubernetes\n+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "snapshotInterval": {
                    "description": "System time duration in seconds to snapshot state for recovery\n+kubebuilder:validation:Optional\n+kubebuilder:default=1",
                    "type": "integer"
                }
            }
        },
        "v1alpha1.S3": {
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "description": "AWS credentials access key id",
                    "type": "string"
                },
                "secretAccessKey": {
                    "description": "AWS credentials secret access key",
                    "type": "string"
                },
                "secretName": {
                    "description": "Name of the Kubernetes Secret that stores AWS credentials. It must contain the keys LITESTREAM_ACCESS_KEY_ID and LITESTREAM_SECRET_ACCESS_KEY",
                    "type": "string"
                },
                "url": {
                    "description": "S3 url to store state backups. For example, s3://mybucket/mydataflow-state-backups",
                    "type": "string"
                }
            }
        },
        "views.DataflowDto": {
            "type": "object",
            "properties": {
                "fileContent": {
                    "type": "string"
                },
                "fileUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.DataflowSpec"
                }
            }
        },
        "views.JobDto": {
            "type": "object",
            "properties": {
                "completionTime": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "ready": {
                    "type": "integer"
                },
                "startTime": {
                    "type": "string"
                },
                "succeded": {
                    "type": "integer"
                },
                "terminating": {
                    "type": "integer"
                }
            }
        },
        "views.JobList": {
            "type": "object",
            "properties": {
                "jobs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/views.JobDto"
                    }
                }
            }
        },
        "views.NamespaceList": {
            "type": "object",
            "properties": {
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "views.PodList": {
            "type": "object",
            "properties": {
                "pods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "views.ResetStateDto": {
            "type": "object",
            "properties": {
                "force": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "views.SecretList": {
            "type": "object",
            "properties": {
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/k8s.Secret"
                    }
                }
            }
        },
        "views.SuspendDto": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "suspend": {
                    "type": "boolean"
                }
            }
        }
    }
}