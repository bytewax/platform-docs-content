{
    "swagger": "2.0",
    "info": {
        "description": "This is the Bytewax Platform API",
        "title": "WaxAPI",
        "termsOfService": "https://bytewax.io/terms-of-use",
        "contact": {
            "name": "Bytewax Platform Support",
            "url": "https://bytewax.io/contact-us",
            "email": "support@bytewax.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "0.4.0"
    },
    "paths": {
        "/dataflows": {
            "get": {
                "description": "get all dataflows",
                "produces": [
                    "application/json"
                ],
                "summary": "get all dataflows",
                "operationId": "get-all-dataflows",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/k8s.DataflowList"
                        }
                    }
                }
            },
            "post": {
                "description": "create dataflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create dataflow",
                "operationId": "create-dataflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Dataflow Data",
                        "name": "specs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.DataflowDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dataflows/{dataflow_name}": {
            "get": {
                "description": "get dataflow by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get dataflow by name",
                "operationId": "get-dataflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/k8s.DataflowResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "update dataflow",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update dataflow",
                "operationId": "update-dataflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dataflow Data",
                        "name": "specs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/views.DataflowDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete dataflow by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "delete dataflow by name",
                "operationId": "delete-dataflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dataflows/{dataflow_name}/logs": {
            "get": {
                "description": "get dataflow logs by pod",
                "summary": "get dataflow logs by pod",
                "operationId": "get-dataflow-logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Pod Name",
                        "name": "pod_name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dataflows/{dataflow_name}/pods": {
            "get": {
                "description": "get dataflow pods by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get dataflow pods by name",
                "operationId": "get-dataflow-pods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataflow Name",
                        "name": "dataflow_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.PodList"
                        }
                    }
                }
            }
        },
        "/namespaces": {
            "get": {
                "description": "get all namespaces",
                "produces": [
                    "application/json"
                ],
                "summary": "get all namespaces",
                "operationId": "get-all-namespaces",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.NamespaceList"
                        }
                    }
                }
            }
        },
        "/secrets": {
            "get": {
                "description": "get all secrets",
                "produces": [
                    "application/json"
                ],
                "summary": "get all secrets",
                "operationId": "get-all-secrets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/views.SecretList"
                        }
                    }
                }
            },
            "post": {
                "description": "create secret",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "create secret",
                "operationId": "create-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Secret Data",
                        "name": "specs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/k8s.Secret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/secrets/{secret_name}": {
            "get": {
                "description": "get secret by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get secret by name",
                "operationId": "get-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret Name",
                        "name": "secret_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include Values",
                        "name": "include_values",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/k8s.Secret"
                        }
                    }
                }
            },
            "put": {
                "description": "update secret",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "update secret",
                "operationId": "update-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret Name",
                        "name": "secret_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Secret Data",
                        "name": "specs",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/k8s.Secret"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete secret by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "delete secret by name",
                "operationId": "delete-secret",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authentication header",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Secret Name",
                        "name": "secret_name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Namespace",
                        "name": "namespace",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "k8s.DataflowList": {
            "type": "object",
            "properties": {
                "dataflows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/k8s.DataflowResponse"
                    }
                }
            }
        },
        "k8s.DataflowResponse": {
            "type": "object",
            "properties": {
                "creationTimestamp": {
                    "type": "string"
                },
                "fileContent": {
                    "type": "string"
                },
                "fileUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.DataflowSpec"
                },
                "ui": {
                    "$ref": "#/definitions/k8s.DataflowUI"
                }
            }
        },
        "k8s.DataflowUI": {
            "type": "object",
            "properties": {
                "details": {
                    "$ref": "#/definitions/gin.H"
                },
                "kind": {
                    "type": "string"
                },
                "processesReady": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "k8s.Secret": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/k8s.SecretPair"
                    }
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                }
            }
        },
        "k8s.SecretPair": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.CloudBackup": {
            "type": "object",
            "properties": {
                "enabled": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "s3": {
                    "$ref": "#/definitions/v1alpha1.S3"
                }
            }
        },
        "v1alpha1.DataflowSpec": {
            "type": "object",
            "properties": {
                "chartValues": {
                    "type": "string"
                },
                "configMapName": {
                    "type": "string"
                },
                "dependencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "env": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/v1alpha1.EnvVar"
                    }
                },
                "image": {
                    "$ref": "#/definitions/v1alpha1.Image"
                },
                "jobMode": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "keepAlive": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "processesCount": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=1",
                    "type": "integer"
                },
                "pythonFileName": {
                    "type": "string"
                },
                "recovery": {
                    "$ref": "#/definitions/v1alpha1.Recovery"
                },
                "tarName": {
                    "description": "+kubebuilder:validation:Optional",
                    "type": "string"
                },
                "workersPerProcess": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=1",
                    "type": "integer"
                }
            }
        },
        "v1alpha1.EnvVar": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.Image": {
            "type": "object",
            "properties": {
                "pullPolicy": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=\"Always\"",
                    "type": "string"
                },
                "pullSecret": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=\"default-credentials\"",
                    "type": "string"
                },
                "repository": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.Persistence": {
            "type": "object",
            "properties": {
                "size": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=\"10Gi\"",
                    "type": "string"
                },
                "storageClassName": {
                    "type": "string"
                }
            }
        },
        "v1alpha1.Recovery": {
            "type": "object",
            "properties": {
                "backupInterval": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=1",
                    "type": "integer"
                },
                "cloudBackup": {
                    "$ref": "#/definitions/v1alpha1.CloudBackup"
                },
                "enabled": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "partsCount": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=1",
                    "type": "integer"
                },
                "persistence": {
                    "$ref": "#/definitions/v1alpha1.Persistence"
                },
                "singleVolume": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=false",
                    "type": "boolean"
                },
                "snapshotInterval": {
                    "description": "+kubebuilder:validation:Optional\n+kubebuilder:default=1",
                    "type": "integer"
                }
            }
        },
        "v1alpha1.S3": {
            "type": "object",
            "properties": {
                "accessKeyId": {
                    "type": "string"
                },
                "secretAccessKey": {
                    "type": "string"
                },
                "secretName": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "views.DataflowDto": {
            "type": "object",
            "properties": {
                "fileContent": {
                    "type": "string"
                },
                "fileUrl": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "namespace": {
                    "type": "string"
                },
                "spec": {
                    "$ref": "#/definitions/v1alpha1.DataflowSpec"
                }
            }
        },
        "views.NamespaceList": {
            "type": "object",
            "properties": {
                "namespaces": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "views.PodList": {
            "type": "object",
            "properties": {
                "pods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "views.SecretList": {
            "type": "object",
            "properties": {
                "secrets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/k8s.Secret"
                    }
                }
            }
        }
    }
}